// Generated by CoffeeScript 1.8.0

/*
  Conditions
 */

(function() {
  var count, count2, defaultValueFn, et, getTime, i, immediate, longString, mutiline, myObj, name, prisoner, release, somefetch, square, string1, string2, sum, testNull, today, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2,
    __slice = [].slice;

  if (3 < 4) {
    'yes';
  }

  if (1 === false) {
    'yes';
  } else {
    'no';
  }

  if (!true) {
    'unless';
  }

  if (1 === true) {
    console.log('true');
  }

  if (1 !== true) {
    'not true';
  }


  /*
    function & function invoke
   */

  square = function(x) {
    return x * x;
  };

  console.log(square(3));

  getTime = function(start, end) {
    if (start == null) {
      start = 0;
    }
    if (end == null) {
      end = 3;
    }
    return end - start;
  };

  sum = function() {
    var num;
    num = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
  };

  immediate = (function() {
    var imme;
    return imme = ['hi', 'hello', 'goo'];
  })();

  defaultValueFn = function(foo) {
    if (foo == null) {
      foo = 'baa';
    }
    return foo;
  };


  /*
  	objects
   */

  myObj = {
    foo: 'bar',
    alpha: 1221,
    omega: function(x, w) {
      return x * 7;
    }
  };


  /*
    Strings
   */

  longString = 'this is a very long string you see ';


  /*
    Loops
   */

  _ref = ['cat', 'dog', 'bird'];
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    name = _ref[_i];
    console.log("" + name);
  }

  _ref1 = ['cat', 'dog', 'bird'];
  for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {
    name = _ref1[i];
    console.log("" + i + " is " + name);
  }

  release = function(x) {
    return 'hello';
  };

  _ref2 = ["Roger", "Roderick", "Brian"];
  for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
    prisoner = _ref2[_k];
    release(prisoner);
  }

  count = 0;

  while (count < 6) {
    count++;
    console.log(count);
  }

  count2 = 6;

  somefetch = (function() {
    var _results;
    _results = [];
    while (count2 -= 1) {
      _results.push(console.log(count2));
    }
    return _results;
  })();

  testNull = typeof null !== "undefined" && null !== null ? null : 1;


  /*
    Reproduce some Jquery code here
  $(function() {
  	$.get('example.php', function(data) {
  	if (data.errors != null) { alert("There was an error!");
  	} else {
  	$("#content").text(data.message); }
  	},
    'json') })
   */


  /*
    immediate execution
   */


  /*
    String Interpolation
   */

  string1 = 'String One More string';

  string2 = 'String Two';

  console.log("first string " + (true ? string1 : void 0));

  console.log("two string " + string2);

  console.log("try some's \" \"good string " + ('kfkfk' ? escape('kfkakkf') : void 0));

  console.log("Conversion to a number form string " + (+'100'));

  mutiline = "<ul>\n<li>list one</li>\n<li>List 2</li>\n</ul>";

  console.log(mutiline);

  et = null;

  if (et == null) {
    et = 'yes it does';
  }

  console.log("if it exiists: " + et);

  et || (et = 0);

  et || (et = 0);

  console.log(et != null);

  et = {
    a: 'foo',
    b: 'bar'
  };

  console.log(typeof dt !== "undefined" && dt !== null ? dt.a : void 0);

  console.log((et != null ? et.a : void 0) !== 'foo');


  /*
    Case switch
   */

  today = 'wed`';

  switch (today) {
    case 'mon':
    case 'fri':
      console.log('monday');
      break;
    case 'tue':
      console.log('tue');
      break;
    default:
      console.log('today is today');
  }

}).call(this);

//# sourceMappingURL=misc.js.map
